import EquipmentSlotType from "../inventory/EquipmentSlotType";
import Registry from "../util/Registry";
import AquaAffinityEnchantment from "./AquaAffinityEnchantment";
import BindingCurseEnchantment from "./BindingCurseEnchantment";
import ChannelingEnchantment from "./ChannelingEnchantment";
import DamageEnchantment from "./DamageEnchantment";
import DepthStriderEnchantment from "./DepthStriderEnchantment";
import EfficiencyEnchantment from "./EfficiencyEnchantment";
import Enchantment, { EnchantmentRarity } from "./Enchantment";
import EnchantmentType from "./EnchantmentType";
import FireAspectEnchantment from "./FireAspectEnchantment";
import FlameEnchantment from "./FlameEnchantment";
import FrostWalkerEnchantment from "./FrostWalkerEnchantment";
import ImpalingEnchantment from "./ImpalingEnchantment";
import InfinityEnchantment from "./InfinityEnchantment";
import KnockbackEnchantment from "./KnockbackEnchantment";
import LootBonusEnchantment from "./LootBonusEnchantment";
import LoyaltyEnchantment from "./LoyaltyEnchantment";
import LureEnchantment from "./LureEnchantment";
import MendingEnchantment from "./MendingEnchantment";
import MultishotEnchantment from "./MultishotEnchantment";
import PiercingEnchantment from "./PiercingEnchantment";
import PowerEnchantment from "./PowerEnchantment";
import ProtectionEnchantment, { ProtectionEnchantmentType } from "./ProtectionEnchantment";
import PunchEnchantment from "./PunchEnchantment";
import QuickChargeEnchantment from "./QuickChargeEnchantment";
import RespirationEnchantment from "./RespirationEnchantment";
import RiptideEnchantment from "./RiptideEnchantment";
import SilkTouchEnchantment from "./SilkTouchEnchantment";
import SoulSpeedEnchantment from "./SoulSpeedEnchantment";
import SweepingEnchantment from "./SweepingEnchantment";
import ThornsEnchantment from "./ThornsEnchantment";
import UnbreakingEnchantment from "./UnbreakingEnchantment";
import VanishingCurseEnchantment from "./VanishingCurseEnchantment";

export default class Enchantments {
  private static readonly ARMOR_SLOTS: EquipmentSlotType[] = [EquipmentSlotType.HEAD, EquipmentSlotType.CHEST, EquipmentSlotType.LEGS, EquipmentSlotType.FEET];
  public static readonly ALL_DAMAGE_PROTECTION: Enchantment = Enchantments.register("protection", new ProtectionEnchantment(EnchantmentRarity.COMMON, ProtectionEnchantmentType.ALL, ...Enchantments.ARMOR_SLOTS));
  public static readonly FIRE_PROTECTION: Enchantment = Enchantments.register("fire_protection", new ProtectionEnchantment(EnchantmentRarity.UNCOMMON, ProtectionEnchantmentType.FIRE, ...Enchantments.ARMOR_SLOTS));
  public static readonly FALL_PROTECTION: Enchantment = Enchantments.register("feather_falling", new ProtectionEnchantment(EnchantmentRarity.UNCOMMON, ProtectionEnchantmentType.FALL, ...Enchantments.ARMOR_SLOTS));
  public static readonly BLAST_PROTECTION: Enchantment = Enchantments.register("blast_protection", new ProtectionEnchantment(EnchantmentRarity.RARE, ProtectionEnchantmentType.EXPLOSION, ...Enchantments.ARMOR_SLOTS));
  public static readonly PROJECTILE_PROTECTION: Enchantment = Enchantments.register("projectile_protection", new ProtectionEnchantment(EnchantmentRarity.UNCOMMON, ProtectionEnchantmentType.PROJECTILE, ...Enchantments.ARMOR_SLOTS));
  public static readonly RESPIRATION: Enchantment = Enchantments.register("respiration", new RespirationEnchantment(EnchantmentRarity.RARE, ...Enchantments.ARMOR_SLOTS));
  public static readonly AQUA_AFFINITY: Enchantment = Enchantments.register("aqua_affinity", new AquaAffinityEnchantment(EnchantmentRarity.RARE, ...Enchantments.ARMOR_SLOTS));
  public static readonly THORNS: Enchantment = Enchantments.register("thorns", new ThornsEnchantment(EnchantmentRarity.VERY_RARE, ...Enchantments.ARMOR_SLOTS));
  public static readonly DEPTH_STRIDER: Enchantment = Enchantments.register("depth_strider", new DepthStriderEnchantment(EnchantmentRarity.RARE, ...Enchantments.ARMOR_SLOTS));
  public static readonly FROST_WALKER: Enchantment = Enchantments.register("frost_walker", new FrostWalkerEnchantment(EnchantmentRarity.RARE, EquipmentSlotType.FEET));
  public static readonly BINDING_CURSE: Enchantment = Enchantments.register("binding_curse", new BindingCurseEnchantment(EnchantmentRarity.VERY_RARE, ...Enchantments.ARMOR_SLOTS));
  public static readonly SOUL_SPEED: Enchantment = Enchantments.register("soul_speed", new SoulSpeedEnchantment(EnchantmentRarity.VERY_RARE, EquipmentSlotType.FEET));
  public static readonly SHARPNESS: Enchantment = Enchantments.register("sharpness", new DamageEnchantment(EnchantmentRarity.COMMON, 0, EquipmentSlotType.MAINHAND));
  public static readonly SMITE: Enchantment = Enchantments.register("smite", new DamageEnchantment(EnchantmentRarity.UNCOMMON, 1, EquipmentSlotType.MAINHAND));
  public static readonly BANE_OF_ARTHROPODS: Enchantment = Enchantments.register("bane_of_arthropods", new DamageEnchantment(EnchantmentRarity.UNCOMMON, 2, EquipmentSlotType.MAINHAND));
  public static readonly KNOCKBACK: Enchantment = Enchantments.register("knockback", new KnockbackEnchantment(EnchantmentRarity.UNCOMMON, EquipmentSlotType.MAINHAND));
  public static readonly FIRE_ASPECT: Enchantment = Enchantments.register("fire_aspect", new FireAspectEnchantment(EnchantmentRarity.RARE, EquipmentSlotType.MAINHAND));
  public static readonly MOB_LOOTING: Enchantment = Enchantments.register("looting", new LootBonusEnchantment(EnchantmentRarity.RARE, EnchantmentType.WEAPON, EquipmentSlotType.MAINHAND));
  public static readonly SWEEPING_EDGE: Enchantment = Enchantments.register("sweeping", new SweepingEnchantment(EnchantmentRarity.RARE, EquipmentSlotType.MAINHAND));
  public static readonly BLOCK_EFFICIENCY: Enchantment = Enchantments.register("efficiency", new EfficiencyEnchantment(EnchantmentRarity.COMMON, EquipmentSlotType.MAINHAND));
  public static readonly SILK_TOUCH: Enchantment = Enchantments.register("silk_touch", new SilkTouchEnchantment(EnchantmentRarity.VERY_RARE, EquipmentSlotType.MAINHAND));
  public static readonly UNBREAKING: Enchantment = Enchantments.register("unbreaking", new UnbreakingEnchantment(EnchantmentRarity.UNCOMMON, EquipmentSlotType.MAINHAND));
  public static readonly BLOCK_FORTUNE: Enchantment = Enchantments.register("fortune", new LootBonusEnchantment(EnchantmentRarity.RARE, EnchantmentType.DIGGER, EquipmentSlotType.MAINHAND));
  public static readonly POWER_ARROWS: Enchantment = Enchantments.register("power", new PowerEnchantment(EnchantmentRarity.COMMON, EquipmentSlotType.MAINHAND));
  public static readonly PUNCH_ARROWS: Enchantment = Enchantments.register("punch", new PunchEnchantment(EnchantmentRarity.RARE, EquipmentSlotType.MAINHAND));
  public static readonly FLAMING_ARROWS: Enchantment = Enchantments.register("flame", new FlameEnchantment(EnchantmentRarity.RARE, EquipmentSlotType.MAINHAND));
  public static readonly INFINITY_ARROWS: Enchantment = Enchantments.register("infinity", new InfinityEnchantment(EnchantmentRarity.VERY_RARE, EquipmentSlotType.MAINHAND));
  public static readonly FISHING_LUCK: Enchantment = Enchantments.register("luck_of_the_sea", new LootBonusEnchantment(EnchantmentRarity.RARE, EnchantmentType.FISHING_ROD, EquipmentSlotType.MAINHAND));
  public static readonly FISHING_SPEED: Enchantment = Enchantments.register("lure", new LureEnchantment(EnchantmentRarity.RARE, EnchantmentType.FISHING_ROD, EquipmentSlotType.MAINHAND));
  public static readonly LOYALTY: Enchantment = Enchantments.register("loyalty", new LoyaltyEnchantment(EnchantmentRarity.UNCOMMON, EquipmentSlotType.MAINHAND));
  public static readonly IMPALING: Enchantment = Enchantments.register("impaling", new ImpalingEnchantment(EnchantmentRarity.RARE, EquipmentSlotType.MAINHAND));
  public static readonly RIPTIDE: Enchantment = Enchantments.register("riptide", new RiptideEnchantment(EnchantmentRarity.RARE, EquipmentSlotType.MAINHAND));
  public static readonly CHANNELING: Enchantment = Enchantments.register("channeling", new ChannelingEnchantment(EnchantmentRarity.VERY_RARE, EquipmentSlotType.MAINHAND));
  public static readonly MULTISHOT: Enchantment = Enchantments.register("multishot", new MultishotEnchantment(EnchantmentRarity.RARE, EquipmentSlotType.MAINHAND));
  public static readonly QUICK_CHARGE: Enchantment = Enchantments.register("quick_charge", new QuickChargeEnchantment(EnchantmentRarity.UNCOMMON, EquipmentSlotType.MAINHAND));
  public static readonly PIERCING: Enchantment = Enchantments.register("piercing", new PiercingEnchantment(EnchantmentRarity.COMMON, EquipmentSlotType.MAINHAND));
  public static readonly MENDING: Enchantment = Enchantments.register("mending", new MendingEnchantment(EnchantmentRarity.RARE, ...Object.values(EquipmentSlotType)));
  public static readonly VANISHING_CURSE: Enchantment = Enchantments.register("vanishing_curse", new VanishingCurseEnchantment(EnchantmentRarity.VERY_RARE, ...Object.values(EquipmentSlotType)));

  private static register(id: string, enchantment: Enchantment): Enchantment {
    return Registry.register(Registry.ENCHANTMENT, id, enchantment);
  }
}